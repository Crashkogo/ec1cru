// –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–∞—Ä–æ–º—É –∞–¥–º–∏–Ω—É
import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcrypt';
import 'dotenv/config';

const prisma = new PrismaClient();

async function fixAdminAccess() {
    try {
        console.log('üîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ...');

        // –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞ "–î–µ–Ω–∏—Å"
        const denisAdmin = await prisma.user.findUnique({
            where: { name: '–î–µ–Ω–∏—Å' }
        });

        if (denisAdmin) {
            console.log('üë§ –ù–∞–π–¥–µ–Ω –∞–¥–º–∏–Ω "–î–µ–Ω–∏—Å"');

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å
            const newPassword = 'denis123';
            const hashedPassword = await bcrypt.hash(newPassword, 10);

            await prisma.user.update({
                where: { name: '–î–µ–Ω–∏—Å' },
                data: {
                    password: hashedPassword,
                    role: 'ADMIN'
                }
            });

            console.log('‚úÖ –ü–∞—Ä–æ–ª—å –¥–ª—è "–î–µ–Ω–∏—Å" –æ–±–Ω–æ–≤–ª–µ–Ω!');
            console.log(`üìù –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: –õ–æ–≥–∏–Ω: –î–µ–Ω–∏—Å, –ü–∞—Ä–æ–ª—å: ${newPassword}`);
        }

        // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–∏–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        const mainAdmin = await prisma.user.findUnique({
            where: { name: 'admin' }
        });

        if (mainAdmin) {
            const adminPassword = 'admin123';
            const hashedAdminPassword = await bcrypt.hash(adminPassword, 10);

            await prisma.user.update({
                where: { name: 'admin' },
                data: {
                    password: hashedAdminPassword,
                    role: 'ADMIN'
                }
            });

            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∞–¥–º–∏–Ω —Ç–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω!');
            console.log(`üìù –î–∞–Ω–Ω—ã–µ: –õ–æ–≥–∏–Ω: admin, –ü–∞—Ä–æ–ª—å: ${adminPassword}`);
        }

        console.log('\nüéØ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ —Å –ª—é–±—ã–º –∏–∑ —ç—Ç–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:');
        console.log('   1. –õ–æ–≥–∏–Ω: –î–µ–Ω–∏—Å, –ü–∞—Ä–æ–ª—å: denis123');
        console.log('   2. –õ–æ–≥–∏–Ω: admin, –ü–∞—Ä–æ–ª—å: admin123');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    } finally {
        await prisma.$disconnect();
    }
}

fixAdminAccess(); 